buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "com.avast.gradle:gradle-docker-compose-plugin:0.7.1"
		/*
		 * Reason: Updated plugin number, jcenter()
		 * Usage: updated the plugin number and used jcenter in conjunction.
		 * Source: https://github.com/avast/gradle-docker-compose-plugin
		 */
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker-compose'

dockerCompose {
	useComposeFiles = ['docker-compose.yml']
}
dockerCompose.isRequiredBy(test)

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compileOnly('org.projectlombok:lombok')
	runtime('org.postgresql:postgresql')
	runtime('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('io.rest-assured:rest-assured:3.0.6')
}

task waitForUsersAPI(type: Exec) {
	commandLine './wait-for-api.sh','http://localhost:8080/users', 'Users API'
}

test {
	dependsOn waitForUsersAPI
}